#!/usr/bin/env python3

import feedparser
import logging
import re
import subprocess
import sys


def main():
    git_remote = sys.argv[1]
    subprocess.check_call(['git', 'remote', 'update', '--prune', git_remote],
                          stdout=subprocess.DEVNULL)
    feed = feedparser.parse('https://commitfest.postgresql.org/action/commitfest_activity.rss')
    items = feed['items']
    for item in items:
        description = item['description']
        if not re.search(r'Patch Edited: Patch Status = Committed', description):
            continue
        m = re.search(r'''<a href=["']http://commitfest.postgresql.org/action/patch_view\?id=(\d+)["']>([^<]+)</a>''', description)
        if not m:
            print(description)
            sys.exit(1)
        patch_id = int(m.group(1))
        logging.info("patch %d was committed", patch_id)
        subprocess.check_call("for b in $(git for-each-ref 'refs/remotes/{git_remote}/cfpatch-{patch_id}-*' --format='%(refname:short)'); do git push --delete {git_remote} ${{b#{git_remote}/}}; done".format(git_remote=git_remote, patch_id=patch_id), shell=True)


if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    main()
